Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7provided.sml"
= ;
[opening hw7provided.sml]
[use failed: Io: openIn failed on "hw7provided.sml", No such file or directory]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:3.5-3.15 Error: unbound variable or constructor: real_close
hw7.sml:3.31-3.41 Error: unbound variable or constructor: real_close
hw7.sml:9.8-9.18 Error: unbound variable or constructor: real_close
hw7.sml:10.10-10.22 Error: unbound variable or constructor: VerticalLine
hw7.sml:16.6-16.10 Error: unbound variable or constructor: Line
hw7.sml:139.20-139.30 Error: unbound variable or constructor: Impossible
hw7.sml:73.10-73.25 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:78.37-78.40 Error: unbound variable or constructor: seg
hw7.sml:138.17-138.27 Error: unbound variable or constructor: Impossible
hw7.sml:94.6-94.22 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:101.39-101.42 Error: unbound variable or constructor: seg
hw7.sml:102.39-102.43 Error: unbound variable or constructor: seg2
hw7.sml:104.6-104.16 Error: unbound variable or constructor: real_close
hw7.sml:110.24-110.28 Error: unbound variable or constructor: seg2
hw7.sml:110.20-110.23 Error: unbound variable or constructor: seg
hw7.sml:111.25-111.28 Error: unbound variable or constructor: seg
hw7.sml:111.20-111.24 Error: unbound variable or constructor: seg2
hw7.sml:113.7-113.17 Error: unbound variable or constructor: real_close
hw7.sml:114.9-114.14 Error: unbound variable or constructor: Point
hw7.sml:116.9-116.17 Error: unbound variable or constructor: NoPoints
hw7.sml:118.9-118.20 Error: unbound variable or constructor: LineSegment
hw7.sml:119.9-119.20 Error: unbound variable or constructor: LineSegment
hw7.sml:126.24-126.28 Error: unbound variable or constructor: seg2
hw7.sml:126.20-126.23 Error: unbound variable or constructor: seg
hw7.sml:127.25-127.28 Error: unbound variable or constructor: seg
hw7.sml:127.20-127.24 Error: unbound variable or constructor: seg2
hw7.sml:129.7-129.17 Error: unbound variable or constructor: real_close
hw7.sml:130.9-130.14 Error: unbound variable or constructor: Point
hw7.sml:132.9-132.17 Error: unbound variable or constructor: NoPoints
hw7.sml:134.9-134.20 Error: unbound variable or constructor: LineSegment
hw7.sml:135.9-135.20 Error: unbound variable or constructor: LineSegment
hw7.sml:93.6-93.20 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:92.6-92.12 Error: non-constructor applied to argument in pattern: Line
hw7.sml:80.6-80.18 Error: non-constructor applied to argument in pattern: Point
hw7.sml:84.15-84.22 Error: unbound variable or constructor: epsilon
hw7.sml:84.48-84.55 Error: unbound variable or constructor: epsilon
hw7.sml:85.22-85.29 Error: unbound variable or constructor: epsilon
hw7.sml:85.55-85.62 Error: unbound variable or constructor: epsilon
hw7.sml:86.23-86.26 Error: unbound variable or constructor: seg
hw7.sml:88.16-88.18 Error: unbound variable or constructor: x0
hw7.sml:88.44-88.46 Error: unbound variable or constructor: y0
hw7.sml:89.8-89.13 Error: unbound variable or constructor: Point
hw7.sml:89.17-89.19 Error: unbound variable or constructor: y0
hw7.sml:89.14-89.16 Error: unbound variable or constructor: x0
hw7.sml:90.8-90.16 Error: unbound variable or constructor: NoPoints
hw7.sml:71.26-71.41 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:71.10-71.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:66.27-66.42 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:66.10-66.25 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:67.5-67.15 Error: unbound variable or constructor: real_close
hw7.sml:67.19-67.21 Error: unbound variable or constructor: x2
hw7.sml:67.16-67.18 Error: unbound variable or constructor: x1
hw7.sml:69.7-69.15 Error: unbound variable or constructor: NoPoints
hw7.sml:64.26-64.32 Error: non-constructor applied to argument in pattern: Line
hw7.sml:64.10-64.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:63.26-63.33 Error: non-constructor applied to argument in pattern: Point
hw7.sml:63.10-63.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:61.18-61.31 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:61.10-61.16 Error: non-constructor applied to argument in pattern: Line
hw7.sml:59.24-59.39 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:59.10-59.22 Error: non-constructor applied to argument in pattern: Line
hw7.sml:59.44-59.49 Error: unbound variable or constructor: Point
hw7.sml:59.64-59.66 Error: unbound variable or constructor: b1
hw7.sml:59.59-59.61 Error: unbound variable or constructor: x2
hw7.sml:59.54-59.56 Error: unbound variable or constructor: m1
hw7.sml:59.50-59.52 Error: unbound variable or constructor: x2
hw7.sml:46.24-46.36 Error: non-constructor applied to argument in pattern: Line
hw7.sml:46.10-46.22 Error: non-constructor applied to argument in pattern: Line
hw7.sml:47.5-47.15 Error: unbound variable or constructor: real_close
hw7.sml:47.19-47.21 Error: unbound variable or constructor: m2
hw7.sml:47.16-47.18 Error: unbound variable or constructor: m1
hw7.sml:48.11-48.21 Error: unbound variable or constructor: real_close
hw7.sml:48.25-48.27 Error: unbound variable or constructor: b2
hw7.sml:48.22-48.24 Error: unbound variable or constructor: b1
hw7.sml:50.14-50.22 Error: unbound variable or constructor: NoPoints
hw7.sml:53.29-53.31 Error: unbound variable or constructor: m2
hw7.sml:53.24-53.26 Error: unbound variable or constructor: m1
hw7.sml:53.17-53.19 Error: unbound variable or constructor: b1
hw7.sml:53.12-53.14 Error: unbound variable or constructor: b2
hw7.sml:54.20-54.22 Error: unbound variable or constructor: b1
hw7.sml:54.11-54.13 Error: unbound variable or constructor: m1
hw7.sml:56.3-56.8 Error: unbound variable or constructor: Point
hw7.sml:44.18-44.25 Error: non-constructor applied to argument in pattern: Point
hw7.sml:44.10-44.16 Error: non-constructor applied to argument in pattern: Line
hw7.sml:42.19-42.34 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:42.10-42.17 Error: non-constructor applied to argument in pattern: Point
hw7.sml:38.24-38.39 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:38.10-38.22 Error: non-constructor applied to argument in pattern: Point
hw7.sml:38.47-38.57 Error: unbound variable or constructor: real_close
hw7.sml:38.61-38.63 Error: unbound variable or constructor: x2
hw7.sml:38.58-38.60 Error: unbound variable or constructor: x1
hw7.sml:40.14-40.22 Error: unbound variable or constructor: NoPoints
hw7.sml:34.23-34.33 Error: non-constructor applied to argument in pattern: Line
hw7.sml:34.10-34.21 Error: non-constructor applied to argument in pattern: Point
hw7.sml:34.41-34.51 Error: unbound variable or constructor: real_close
hw7.sml:34.63 Error: unbound variable or constructor: b
hw7.sml:34.59 Error: unbound variable or constructor: x
hw7.sml:34.55 Error: unbound variable or constructor: m
hw7.sml:34.52 Error: unbound variable or constructor: y
hw7.sml:36.15-36.23 Error: unbound variable or constructor: NoPoints
hw7.sml:30.20-30.28 Error: non-constructor applied to argument in pattern: Point
hw7.sml:30.10-30.18 Error: non-constructor applied to argument in pattern: Point
hw7.sml:30.53-30.55 Error: unbound variable or constructor: p1
hw7.sml:30.56-30.58 Error: unbound variable or constructor: p2
hw7.sml:32.10-32.18 Error: unbound variable or constructor: NoPoints
hw7.sml:163.9-163.25 Error: non-constructor applied to argument in pattern: Intersect
hw7.sml:163.68-163.70 Error: unbound variable or constructor: e2
hw7.sml:163.49-163.51 Error: unbound variable or constructor: e1
hw7.sml:162.9-162.21 Error: non-constructor applied to argument in pattern: Let
hw7.sml:162.55-162.57 Error: unbound variable or constructor: e1
hw7.sml:162.42 Error: unbound variable or constructor: s
hw7.sml:162.36-162.38 Error: unbound variable or constructor: e2
hw7.sml:158.9-158.14 Error: non-constructor applied to argument in pattern: Var
hw7.sml:159.32 Error: unbound variable or constructor: s
hw7.sml:160.21-160.31 Error: unbound variable or constructor: BadProgram
hw7.sml:160.52 Error: unbound variable or constructor: s
hw7.sml:157.9-157.22 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:156.9-156.23 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:155.9-155.15 Error: non-constructor applied to argument in pattern: Line
hw7.sml:154.9-154.16 Error: non-constructor applied to argument in pattern: Point
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:3.5-3.15 Error: unbound variable or constructor: real_close
hw7.sml:3.31-3.41 Error: unbound variable or constructor: real_close
hw7.sml:9.8-9.18 Error: unbound variable or constructor: real_close
hw7.sml:10.10-10.22 Error: unbound variable or constructor: VerticalLine
hw7.sml:16.6-16.10 Error: unbound variable or constructor: Line
hw7.sml:139.20-139.30 Error: unbound variable or constructor: Impossible
hw7.sml:73.10-73.25 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:78.37-78.40 Error: unbound variable or constructor: seg
hw7.sml:138.17-138.27 Error: unbound variable or constructor: Impossible
hw7.sml:94.6-94.22 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:101.39-101.42 Error: unbound variable or constructor: seg
hw7.sml:102.39-102.43 Error: unbound variable or constructor: seg2
hw7.sml:104.6-104.16 Error: unbound variable or constructor: real_close
hw7.sml:110.24-110.28 Error: unbound variable or constructor: seg2
hw7.sml:110.20-110.23 Error: unbound variable or constructor: seg
hw7.sml:111.25-111.28 Error: unbound variable or constructor: seg
hw7.sml:111.20-111.24 Error: unbound variable or constructor: seg2
hw7.sml:113.7-113.17 Error: unbound variable or constructor: real_close
hw7.sml:114.9-114.14 Error: unbound variable or constructor: Point
hw7.sml:116.9-116.17 Error: unbound variable or constructor: NoPoints
hw7.sml:118.9-118.20 Error: unbound variable or constructor: LineSegment
hw7.sml:119.9-119.20 Error: unbound variable or constructor: LineSegment
hw7.sml:126.24-126.28 Error: unbound variable or constructor: seg2
hw7.sml:126.20-126.23 Error: unbound variable or constructor: seg
hw7.sml:127.25-127.28 Error: unbound variable or constructor: seg
hw7.sml:127.20-127.24 Error: unbound variable or constructor: seg2
hw7.sml:129.7-129.17 Error: unbound variable or constructor: real_close
hw7.sml:130.9-130.14 Error: unbound variable or constructor: Point
hw7.sml:132.9-132.17 Error: unbound variable or constructor: NoPoints
hw7.sml:134.9-134.20 Error: unbound variable or constructor: LineSegment
hw7.sml:135.9-135.20 Error: unbound variable or constructor: LineSegment
hw7.sml:93.6-93.20 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:92.6-92.12 Error: non-constructor applied to argument in pattern: Line
hw7.sml:80.6-80.18 Error: non-constructor applied to argument in pattern: Point
hw7.sml:84.15-84.22 Error: unbound variable or constructor: epsilon
hw7.sml:84.48-84.55 Error: unbound variable or constructor: epsilon
hw7.sml:85.22-85.29 Error: unbound variable or constructor: epsilon
hw7.sml:85.55-85.62 Error: unbound variable or constructor: epsilon
hw7.sml:86.23-86.26 Error: unbound variable or constructor: seg
hw7.sml:88.16-88.18 Error: unbound variable or constructor: x0
hw7.sml:88.44-88.46 Error: unbound variable or constructor: y0
hw7.sml:89.8-89.13 Error: unbound variable or constructor: Point
hw7.sml:89.17-89.19 Error: unbound variable or constructor: y0
hw7.sml:89.14-89.16 Error: unbound variable or constructor: x0
hw7.sml:90.8-90.16 Error: unbound variable or constructor: NoPoints
hw7.sml:71.26-71.41 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:71.10-71.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:66.27-66.42 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:66.10-66.25 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:67.5-67.15 Error: unbound variable or constructor: real_close
hw7.sml:67.19-67.21 Error: unbound variable or constructor: x2
hw7.sml:67.16-67.18 Error: unbound variable or constructor: x1
hw7.sml:69.7-69.15 Error: unbound variable or constructor: NoPoints
hw7.sml:64.26-64.32 Error: non-constructor applied to argument in pattern: Line
hw7.sml:64.10-64.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:63.26-63.33 Error: non-constructor applied to argument in pattern: Point
hw7.sml:63.10-63.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:61.18-61.31 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:61.10-61.16 Error: non-constructor applied to argument in pattern: Line
hw7.sml:59.24-59.39 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:59.10-59.22 Error: non-constructor applied to argument in pattern: Line
hw7.sml:59.44-59.49 Error: unbound variable or constructor: Point
hw7.sml:59.64-59.66 Error: unbound variable or constructor: b1
hw7.sml:59.59-59.61 Error: unbound variable or constructor: x2
hw7.sml:59.54-59.56 Error: unbound variable or constructor: m1
hw7.sml:59.50-59.52 Error: unbound variable or constructor: x2
hw7.sml:46.24-46.36 Error: non-constructor applied to argument in pattern: Line
hw7.sml:46.10-46.22 Error: non-constructor applied to argument in pattern: Line
hw7.sml:47.5-47.15 Error: unbound variable or constructor: real_close
hw7.sml:47.19-47.21 Error: unbound variable or constructor: m2
hw7.sml:47.16-47.18 Error: unbound variable or constructor: m1
hw7.sml:48.11-48.21 Error: unbound variable or constructor: real_close
hw7.sml:48.25-48.27 Error: unbound variable or constructor: b2
hw7.sml:48.22-48.24 Error: unbound variable or constructor: b1
hw7.sml:50.14-50.22 Error: unbound variable or constructor: NoPoints
hw7.sml:53.29-53.31 Error: unbound variable or constructor: m2
hw7.sml:53.24-53.26 Error: unbound variable or constructor: m1
hw7.sml:53.17-53.19 Error: unbound variable or constructor: b1
hw7.sml:53.12-53.14 Error: unbound variable or constructor: b2
hw7.sml:54.20-54.22 Error: unbound variable or constructor: b1
hw7.sml:54.11-54.13 Error: unbound variable or constructor: m1
hw7.sml:56.3-56.8 Error: unbound variable or constructor: Point
hw7.sml:44.18-44.25 Error: non-constructor applied to argument in pattern: Point
hw7.sml:44.10-44.16 Error: non-constructor applied to argument in pattern: Line
hw7.sml:42.19-42.34 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:42.10-42.17 Error: non-constructor applied to argument in pattern: Point
hw7.sml:38.24-38.39 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:38.10-38.22 Error: non-constructor applied to argument in pattern: Point
hw7.sml:38.47-38.57 Error: unbound variable or constructor: real_close
hw7.sml:38.61-38.63 Error: unbound variable or constructor: x2
hw7.sml:38.58-38.60 Error: unbound variable or constructor: x1
hw7.sml:40.14-40.22 Error: unbound variable or constructor: NoPoints
hw7.sml:34.23-34.33 Error: non-constructor applied to argument in pattern: Line
hw7.sml:34.10-34.21 Error: non-constructor applied to argument in pattern: Point
hw7.sml:34.41-34.51 Error: unbound variable or constructor: real_close
hw7.sml:34.63 Error: unbound variable or constructor: b
hw7.sml:34.59 Error: unbound variable or constructor: x
hw7.sml:34.55 Error: unbound variable or constructor: m
hw7.sml:34.52 Error: unbound variable or constructor: y
hw7.sml:36.15-36.23 Error: unbound variable or constructor: NoPoints
hw7.sml:30.20-30.28 Error: non-constructor applied to argument in pattern: Point
hw7.sml:30.10-30.18 Error: non-constructor applied to argument in pattern: Point
hw7.sml:30.53-30.55 Error: unbound variable or constructor: p1
hw7.sml:30.56-30.58 Error: unbound variable or constructor: p2
hw7.sml:32.10-32.18 Error: unbound variable or constructor: NoPoints
hw7.sml:163.9-163.25 Error: non-constructor applied to argument in pattern: Intersect
hw7.sml:163.68-163.70 Error: unbound variable or constructor: e2
hw7.sml:163.49-163.51 Error: unbound variable or constructor: e1
hw7.sml:162.9-162.21 Error: non-constructor applied to argument in pattern: Let
hw7.sml:162.55-162.57 Error: unbound variable or constructor: e1
hw7.sml:162.42 Error: unbound variable or constructor: s
hw7.sml:162.36-162.38 Error: unbound variable or constructor: e2
hw7.sml:158.9-158.14 Error: non-constructor applied to argument in pattern: Var
hw7.sml:159.32 Error: unbound variable or constructor: s
hw7.sml:160.21-160.31 Error: unbound variable or constructor: BadProgram
hw7.sml:160.52 Error: unbound variable or constructor: s
hw7.sml:157.9-157.22 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:156.9-156.23 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:155.9-155.15 Error: non-constructor applied to argument in pattern: Line
hw7.sml:154.9-154.16 Error: non-constructor applied to argument in pattern: Point
hw7.sml:167.22-167.46 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:168.27-168.29 Error: unbound variable or constructor: y1
hw7.sml:168.24-168.26 Error: unbound variable or constructor: x1
hw7.sml:168.35-168.37 Error: unbound variable or constructor: y2
hw7.sml:168.32-168.34 Error: unbound variable or constructor: x2
hw7.sml:169.8-169.13 Error: unbound variable or constructor: Point
hw7.sml:169.17-169.19 Error: unbound variable or constructor: y1
hw7.sml:169.14-169.16 Error: unbound variable or constructor: x1
hw7.sml:170.8-170.13 Error: unbound variable or constructor: Point
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:3.5-3.15 Error: unbound variable or constructor: real_close
hw7.sml:3.31-3.41 Error: unbound variable or constructor: real_close
hw7.sml:9.8-9.18 Error: unbound variable or constructor: real_close
hw7.sml:10.10-10.22 Error: unbound variable or constructor: VerticalLine
hw7.sml:16.6-16.10 Error: unbound variable or constructor: Line
hw7.sml:139.20-139.30 Error: unbound variable or constructor: Impossible
hw7.sml:73.10-73.25 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:78.37-78.40 Error: unbound variable or constructor: seg
hw7.sml:138.17-138.27 Error: unbound variable or constructor: Impossible
hw7.sml:94.6-94.22 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:101.39-101.42 Error: unbound variable or constructor: seg
hw7.sml:102.39-102.43 Error: unbound variable or constructor: seg2
hw7.sml:104.6-104.16 Error: unbound variable or constructor: real_close
hw7.sml:110.24-110.28 Error: unbound variable or constructor: seg2
hw7.sml:110.20-110.23 Error: unbound variable or constructor: seg
hw7.sml:111.25-111.28 Error: unbound variable or constructor: seg
hw7.sml:111.20-111.24 Error: unbound variable or constructor: seg2
hw7.sml:113.7-113.17 Error: unbound variable or constructor: real_close
hw7.sml:114.9-114.14 Error: unbound variable or constructor: Point
hw7.sml:116.9-116.17 Error: unbound variable or constructor: NoPoints
hw7.sml:118.9-118.20 Error: unbound variable or constructor: LineSegment
hw7.sml:119.9-119.20 Error: unbound variable or constructor: LineSegment
hw7.sml:126.24-126.28 Error: unbound variable or constructor: seg2
hw7.sml:126.20-126.23 Error: unbound variable or constructor: seg
hw7.sml:127.25-127.28 Error: unbound variable or constructor: seg
hw7.sml:127.20-127.24 Error: unbound variable or constructor: seg2
hw7.sml:129.7-129.17 Error: unbound variable or constructor: real_close
hw7.sml:130.9-130.14 Error: unbound variable or constructor: Point
hw7.sml:132.9-132.17 Error: unbound variable or constructor: NoPoints
hw7.sml:134.9-134.20 Error: unbound variable or constructor: LineSegment
hw7.sml:135.9-135.20 Error: unbound variable or constructor: LineSegment
hw7.sml:93.6-93.20 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:92.6-92.12 Error: non-constructor applied to argument in pattern: Line
hw7.sml:80.6-80.18 Error: non-constructor applied to argument in pattern: Point
hw7.sml:84.15-84.22 Error: unbound variable or constructor: epsilon
hw7.sml:84.48-84.55 Error: unbound variable or constructor: epsilon
hw7.sml:85.22-85.29 Error: unbound variable or constructor: epsilon
hw7.sml:85.55-85.62 Error: unbound variable or constructor: epsilon
hw7.sml:86.23-86.26 Error: unbound variable or constructor: seg
hw7.sml:88.16-88.18 Error: unbound variable or constructor: x0
hw7.sml:88.44-88.46 Error: unbound variable or constructor: y0
hw7.sml:89.8-89.13 Error: unbound variable or constructor: Point
hw7.sml:89.17-89.19 Error: unbound variable or constructor: y0
hw7.sml:89.14-89.16 Error: unbound variable or constructor: x0
hw7.sml:90.8-90.16 Error: unbound variable or constructor: NoPoints
hw7.sml:71.26-71.41 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:71.10-71.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:66.27-66.42 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:66.10-66.25 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:67.5-67.15 Error: unbound variable or constructor: real_close
hw7.sml:67.19-67.21 Error: unbound variable or constructor: x2
hw7.sml:67.16-67.18 Error: unbound variable or constructor: x1
hw7.sml:69.7-69.15 Error: unbound variable or constructor: NoPoints
hw7.sml:64.26-64.32 Error: non-constructor applied to argument in pattern: Line
hw7.sml:64.10-64.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:63.26-63.33 Error: non-constructor applied to argument in pattern: Point
hw7.sml:63.10-63.24 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:61.18-61.31 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:61.10-61.16 Error: non-constructor applied to argument in pattern: Line
hw7.sml:59.24-59.39 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:59.10-59.22 Error: non-constructor applied to argument in pattern: Line
hw7.sml:59.44-59.49 Error: unbound variable or constructor: Point
hw7.sml:59.64-59.66 Error: unbound variable or constructor: b1
hw7.sml:59.59-59.61 Error: unbound variable or constructor: x2
hw7.sml:59.54-59.56 Error: unbound variable or constructor: m1
hw7.sml:59.50-59.52 Error: unbound variable or constructor: x2
hw7.sml:46.24-46.36 Error: non-constructor applied to argument in pattern: Line
hw7.sml:46.10-46.22 Error: non-constructor applied to argument in pattern: Line
hw7.sml:47.5-47.15 Error: unbound variable or constructor: real_close
hw7.sml:47.19-47.21 Error: unbound variable or constructor: m2
hw7.sml:47.16-47.18 Error: unbound variable or constructor: m1
hw7.sml:48.11-48.21 Error: unbound variable or constructor: real_close
hw7.sml:48.25-48.27 Error: unbound variable or constructor: b2
hw7.sml:48.22-48.24 Error: unbound variable or constructor: b1
hw7.sml:50.14-50.22 Error: unbound variable or constructor: NoPoints
hw7.sml:53.29-53.31 Error: unbound variable or constructor: m2
hw7.sml:53.24-53.26 Error: unbound variable or constructor: m1
hw7.sml:53.17-53.19 Error: unbound variable or constructor: b1
hw7.sml:53.12-53.14 Error: unbound variable or constructor: b2
hw7.sml:54.20-54.22 Error: unbound variable or constructor: b1
hw7.sml:54.11-54.13 Error: unbound variable or constructor: m1
hw7.sml:56.3-56.8 Error: unbound variable or constructor: Point
hw7.sml:44.18-44.25 Error: non-constructor applied to argument in pattern: Point
hw7.sml:44.10-44.16 Error: non-constructor applied to argument in pattern: Line
hw7.sml:42.19-42.34 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:42.10-42.17 Error: non-constructor applied to argument in pattern: Point
hw7.sml:38.24-38.39 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:38.10-38.22 Error: non-constructor applied to argument in pattern: Point
hw7.sml:38.47-38.57 Error: unbound variable or constructor: real_close
hw7.sml:38.61-38.63 Error: unbound variable or constructor: x2
hw7.sml:38.58-38.60 Error: unbound variable or constructor: x1
hw7.sml:40.14-40.22 Error: unbound variable or constructor: NoPoints
hw7.sml:34.23-34.33 Error: non-constructor applied to argument in pattern: Line
hw7.sml:34.10-34.21 Error: non-constructor applied to argument in pattern: Point
hw7.sml:34.41-34.51 Error: unbound variable or constructor: real_close
hw7.sml:34.63 Error: unbound variable or constructor: b
hw7.sml:34.59 Error: unbound variable or constructor: x
hw7.sml:34.55 Error: unbound variable or constructor: m
hw7.sml:34.52 Error: unbound variable or constructor: y
hw7.sml:36.15-36.23 Error: unbound variable or constructor: NoPoints
hw7.sml:30.20-30.28 Error: non-constructor applied to argument in pattern: Point
hw7.sml:30.10-30.18 Error: non-constructor applied to argument in pattern: Point
hw7.sml:30.53-30.55 Error: unbound variable or constructor: p1
hw7.sml:30.56-30.58 Error: unbound variable or constructor: p2
hw7.sml:32.10-32.18 Error: unbound variable or constructor: NoPoints
hw7.sml:164.9-164.31 Error: non-constructor applied to argument in pattern: Shift
hw7.sml:164.35-164.40 Error: unbound variable or constructor: Point
hw7.sml:163.9-163.25 Error: non-constructor applied to argument in pattern: Intersect
hw7.sml:163.68-163.70 Error: unbound variable or constructor: e2
hw7.sml:163.49-163.51 Error: unbound variable or constructor: e1
hw7.sml:162.9-162.21 Error: non-constructor applied to argument in pattern: Let
hw7.sml:162.55-162.57 Error: unbound variable or constructor: e1
hw7.sml:162.42 Error: unbound variable or constructor: s
hw7.sml:162.36-162.38 Error: unbound variable or constructor: e2
hw7.sml:158.9-158.14 Error: non-constructor applied to argument in pattern: Var
hw7.sml:159.32 Error: unbound variable or constructor: s
hw7.sml:160.21-160.31 Error: unbound variable or constructor: BadProgram
hw7.sml:160.52 Error: unbound variable or constructor: s
hw7.sml:157.9-157.22 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:156.9-156.23 Error: non-constructor applied to argument in pattern: VerticalLine
hw7.sml:155.9-155.15 Error: non-constructor applied to argument in pattern: Line
hw7.sml:154.9-154.16 Error: non-constructor applied to argument in pattern: Point
hw7.sml:168.22-168.46 Error: non-constructor applied to argument in pattern: LineSegment
hw7.sml:169.27-169.29 Error: unbound variable or constructor: y1
hw7.sml:169.24-169.26 Error: unbound variable or constructor: x1
hw7.sml:169.35-169.37 Error: unbound variable or constructor: y2
hw7.sml:169.32-169.34 Error: unbound variable or constructor: x2
hw7.sml:170.8-170.13 Error: unbound variable or constructor: Point
hw7.sml:170.17-170.19 Error: unbound variable or constructor: y1
hw7.sml:170.14-170.16 Error: unbound variable or constructor: x1
hw7.sml:171.8-171.13 Error: unbound variable or constructor: Point
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- [autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- = = stdIn:4.1-4.15 Error: syntax error: deleting  VAL ID
stdIn:4.18-4.22 Error: syntax error: deleting  FN COLON
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:198.9-198.31 Error: non-constructor applied to argument in pattern: Shift
hw7.sml:198.35-198.57 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (1000000,1000000)
hw7.sml:205.8-205.30 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (1000000,1000000)
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:199.9-199.31 Error: non-constructor applied to argument in pattern: Shift
hw7.sml:199.35-199.57 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (1000000,1000000)
hw7.sml:206.8-206.30 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (1000000,1000000)
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:199.35-199.49 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (100,100)
hw7.sml:206.8-206.30 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (1000000,1000000)
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:206.8-206.30 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real
  operand:         [int ty] * [int ty]
  in expression:
    Point (1000000,1000000)
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:15.6-15.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:15.19-15.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:15.35-15.46 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:16.6-16.16 Error: non-constructor applied to argument in pattern: Point
hw7testsprovided.sml:16.19-16.24 Error: unbound variable or constructor: Point
hw7testsprovided.sml:18.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:18.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:18.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:18.40 Error: unbound variable or constructor: b
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.5-206.34 Warning: match nonexhaustive
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:24.6-24.77
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.5-206.34 Warning: match nonexhaustive
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.10-14.26 Error: unbound variable or constructor: pre_process_prog
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = preprocess_prog <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.5-206.34 Warning: match nonexhaustive
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = preprocess_prog <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
hw7testsprovided.sml:14.5-23.4 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * _
  in expression:
    preprocess_prog NoPoints =
      NoPoints
        let val <pat> = <exp>
            val <pat> = <exp>
        in if <exp> andalso <exp> then print <exp> else print <exp>
        end
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = preprocess_prog <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
hw7testsprovided.sml:14.5-23.4 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * _
  in expression:
    preprocess_prog NoPoints =
      NoPoints
        let val <pat> = <exp>
            val <pat> = <exp>
        in if <exp> andalso <exp> then print <exp> else print <exp>
        end
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = preprocess_prog <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
hw7testsprovided.sml:14.5-23.4 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * _
  in expression:
    preprocess_prog NoPoints =
      NoPoints
        let val <pat> = <exp>
            val <pat> = <exp>
        in if <exp> andalso <exp> then print <exp> else print <exp>
        end
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:17.19-17.34 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:14.10-14.25 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = <errorvar> <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = preprocess_prog <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
hw7testsprovided.sml:14.5-23.4 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * _
  in expression:
    preprocess_prog NoPoints =
      NoPoints
        let val <pat> = <exp>
            val <pat> = <exp>
        in if <exp> andalso <exp> then print <exp> else print <exp>
        end
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-23.4 Error: operator is not a function [tycon mismatch]
  operator: geom_exp
  in expression:
    NoPoints
      let val Point <pat> = preprocess_prog <exp>
          val Point <pat> = Point <exp>
      in if (real_equal <exp>) andalso (real_equal <exp>)
         then print
                "preprocess converts a LineSegment to a Point successfully\n"
         else print
                "preprocess does not convert a LineSegment to a Point succesfully\n"
      end
hw7testsprovided.sml:14.5-23.4 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * _
  in expression:
    preprocess_prog NoPoints =
      NoPoints
        let val <pat> = <exp>
            val <pat> = <exp>
        in if <exp> andalso <exp> then print <exp> else print <exp>
        end
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-14.46 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * geom_exp
  in expression:
    preprocess_prog NoPoints = NoPoints
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-14.45 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * geom_exp
  in expression:
    preprocess_prog NoPoints = NoPoints
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-14.29 Error: operator and operand don't agree [equality type required]
  operator domain: ''Z * ''Z
  operand:         geom_exp * geom_exp
  in expression:
    NoPoints = NoPoints
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.5-14.49 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog NoPoints
hw7testsprovided.sml:14.5-14.49 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog NoPoints
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:14.11-14.30 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog NoPoints
hw7testsprovided.sml:14.35-14.54 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog NoPoints
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
val t0 = true : bool
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:31.6-31.77
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : 'a -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:16.6-16.64
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-211.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-211.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:25.6-25.77
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:204.3-214.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:25.6-25.77
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:204.3-212.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-212.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:34.6-34.76
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-213.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-213.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-213.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:43.6-43.76
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:16.35-16.55 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real * real * real
  operand:         [int ty] * [int ty] * [int ty] * [int ty]
  in expression:
    LineSegment (1,1,2,2)
hw7testsprovided.sml:17.6-17.39 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real * real * real
  operand:         [int ty] * [int ty] * [int ty] * [int ty]
  in expression:
    LineSegment (1,1,2,2)
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:16.35-16.55 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real * real * real
  operand:         [int ty] * [int ty] * [int ty] * [int ty]
  in expression:
    LineSegment (1,1,2,2)
hw7testsprovided.sml:17.6-17.39 Error: operator and operand don't agree [overload conflict]
  operator domain: real * real * real * real
  operand:         [int ty] * [int ty] * [int ty] * [int ty]
  in expression:
    LineSegment (1,1,2,2)
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:17.6-17.47
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:16.6-16.64
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:16.6-16.64
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-215.30 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:16.6-16.64
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:204.3-215.34 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:16.6-16.64
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:16.6-16.64
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-214.36 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:204.3-215.21 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
          Var s => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
hw7testsprovided.sml:63.19-63.37 Error: constructor and argument don't agree in pattern [tycon mismatch]
  constructor: real * real -> geom_exp
  argument:    'Z * 'Y * 'X * 'W
  in pattern:
    Point (y1,y2,y3,y4)
hw7testsprovided.sml:63.38-63.56 Error: constructor and argument don't agree in pattern [tycon mismatch]
  constructor: real * real -> geom_exp
  argument:    'Z * 'Y * 'X * 'W
  in pattern:
    Point (y5,y6,y7,y8)
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-215.21 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
          Var s => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-215.21 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
          Var s => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
hw7testsprovided.sml:61.9-62.92 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp
  operand:         geom_exp * geom_exp -> geom_exp
  in expression:
    preprocess_prog Intersect
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-215.21 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
          Var s => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
hw7testsprovided.sml:61.9-62.92 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp
  operand:         geom_exp * geom_exp -> geom_exp
  in expression:
    preprocess_prog Intersect
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-215.21 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
          Var s => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit

uncaught exception Match [nonexhaustive match failure]
  raised at: hw7.sml:215.21
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.3-216.76 Warning: match nonexhaustive
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment (x1,y1,x2,y2) => ...
          Var s => ...
          Intersect (e1,e2) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment is not working properly
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:200.2-202.44 Warning: match nonexhaustive
          NoPoints => ...
          Point (x,y) => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:205.17 Error: syntax error: inserting  FN

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:42.54
             ../compiler/TopLevel/interact/evalloop.sml:299.20-299.23
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:204.6-206.55 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog (Var s)
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit

uncaught exception Match [nonexhaustive match failure]
  raised at: hw7.sml:202.44
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.20-203.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog (Var s)
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit

uncaught exception Match [nonexhaustive match failure]
  raised at: hw7.sml:202.44
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.20-203.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog (Var s)
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit

uncaught exception Match [nonexhaustive match failure]
  raised at: hw7.sml:202.44
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.20-203.53 Error: operator and operand don't agree [tycon mismatch]
  operator domain: geom_exp * (string * geom_exp) list
  operand:         geom_exp
  in expression:
    eval_prog (Var s)
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit

uncaught exception Match [nonexhaustive match failure]
  raised at: hw7.sml:202.44
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:200.2-203.57 Warning: match nonexhaustive
          NoPoints => ...
          Point (x,y) => ...
          Var s => ...
  
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:84.6-84.79
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
hw7.sml:200.3-203.58 Warning: match nonexhaustive
          NoPoints => ...
          Point (x,y) => ...
          Var s => ...
  
hw7.sml:187.5-204.28 Error: match redundant
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment _ => ...
          Var s => ...
          Let (s,e1,e2) => ...
          Intersect (e1,e2) => ...
          Shift (deltaX,deltaY,e) => ...
    -->   _ => ...
  
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:16.6-16.26 Error: non-constructor applied to argument in pattern: LineSegment
hw7testsprovided.sml:16.29-16.44 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:16.46-16.57 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:17.6-17.26 Error: non-constructor applied to argument in pattern: LineSegment
hw7testsprovided.sml:17.29-17.40 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:19.18 Error: unbound variable or constructor: e
hw7testsprovided.sml:19.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:19.42 Error: unbound variable or constructor: f
hw7testsprovided.sml:19.40 Error: unbound variable or constructor: b
hw7testsprovided.sml:19.66 Error: unbound variable or constructor: g
hw7testsprovided.sml:19.64 Error: unbound variable or constructor: c
hw7testsprovided.sml:19.90 Error: unbound variable or constructor: h
hw7testsprovided.sml:19.88 Error: unbound variable or constructor: d
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:200.3-203.58 Warning: match nonexhaustive
          NoPoints => ...
          Point (x,y) => ...
          Var s => ...
  
hw7.sml:187.5-204.15 Error: match redundant
          NoPoints => ...
          Point _ => ...
          Line _ => ...
          VerticalLine _ => ...
          LineSegment _ => ...
          Var s => ...
          Let (s,e1,e2) => ...
          Intersect (e1,e2) => ...
          Shift (deltaX,deltaY,e) => ...
    -->   _ => ...
  
val it = () : unit
val real_equal = fn : real * real -> bool
hw7testsprovided.sml:16.6-16.26 Error: non-constructor applied to argument in pattern: LineSegment
hw7testsprovided.sml:16.29-16.44 Error: unbound variable or constructor: preprocess_prog
hw7testsprovided.sml:16.46-16.57 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:17.6-17.26 Error: non-constructor applied to argument in pattern: LineSegment
hw7testsprovided.sml:17.29-17.40 Error: unbound variable or constructor: LineSegment
hw7testsprovided.sml:19.18 Error: unbound variable or constructor: e
hw7testsprovided.sml:19.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:19.42 Error: unbound variable or constructor: f
hw7testsprovided.sml:19.40 Error: unbound variable or constructor: b
hw7testsprovided.sml:19.66 Error: unbound variable or constructor: g
hw7testsprovided.sml:19.64 Error: unbound variable or constructor: c
hw7testsprovided.sml:19.90 Error: unbound variable or constructor: h
hw7testsprovided.sml:19.88 Error: unbound variable or constructor: d
val it = () : unit
- hw7testsprovided.sml:19.18 Error: unbound variable or constructor: e
hw7testsprovided.sml:19.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:19.42 Error: unbound variable or constructor: f
hw7testsprovided.sml:19.40 Error: unbound variable or constructor: b
hw7testsprovided.sml:19.66 Error: unbound variable or constructor: g
hw7testsprovided.sml:19.64 Error: unbound variable or constructor: c
hw7testsprovided.sml:19.90 Error: unbound variable or constructor: h
hw7testsprovided.sml:19.88 Error: unbound variable or constructor: d
val it = () : unit
- = stdIn:3.21-3.33 Error: syntax error: deleting  COLON REAL ID
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- hw7testsprovided.sml:19.18 Error: unbound variable or constructor: e
hw7testsprovided.sml:19.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:19.42 Error: unbound variable or constructor: f
hw7testsprovided.sml:19.40 Error: unbound variable or constructor: b
hw7testsprovided.sml:19.66 Error: unbound variable or constructor: g
hw7testsprovided.sml:19.64 Error: unbound variable or constructor: c
hw7testsprovided.sml:19.90 Error: unbound variable or constructor: h
hw7testsprovided.sml:19.88 Error: unbound variable or constructor: d
val it = () : unit
- = stdIn:1.22-1.34 Error: syntax error: deleting  COLON REAL ID
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:84.6-84.79
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
hw7testsprovided.sml:85.6-85.21 Error: non-constructor applied to argument in pattern: actualline
hw7testsprovided.sml:85.52-85.56 Error: unbound variable or constructor: line
hw7testsprovided.sml:86.6-86.21 Error: non-constructor applied to argument in pattern: expectline
hw7testsprovided.sml:88.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:88.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:88.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:88.40 Error: unbound variable or constructor: b
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
hw7testsprovided.sml:85.6-85.15 Error: non-constructor applied to argument in pattern: line
hw7testsprovided.sml:85.46-85.50 Error: unbound variable or constructor: line
hw7testsprovided.sml:86.6-86.15 Error: non-constructor applied to argument in pattern: line
hw7testsprovided.sml:88.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:88.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:88.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:88.40 Error: unbound variable or constructor: b
val it = () : unit
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
[autoloading]
[autoloading done]
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
hw7testsprovided.sml:85.6-85.15 Error: non-constructor applied to argument in pattern: line
hw7testsprovided.sml:85.46-85.50 Error: unbound variable or constructor: line
hw7testsprovided.sml:86.6-86.15 Error: non-constructor applied to argument in pattern: line
hw7testsprovided.sml:88.18 Error: unbound variable or constructor: c
hw7testsprovided.sml:88.16 Error: unbound variable or constructor: a
hw7testsprovided.sml:88.42 Error: unbound variable or constructor: d
hw7testsprovided.sml:88.40 Error: unbound variable or constructor: b
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
hw7testsprovided.sml:86.6-86.28 Error: pattern and expression in val dec don't agree [tycon mismatch]
  pattern:    geom_exp
  expression:    real * real
  in declaration:
    Line (c,d) = (4.0,~4.0)
val it = () : unit
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
line shift broke!
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:95.6-95.79
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
datatype geom_exp
  = Intersect of geom_exp * geom_exp
  | Let of string * geom_exp * geom_exp
  | Line of real * real
  | LineSegment of real * real * real * real
  | NoPoints
  | Point of real * real
  | Shift of real * real * geom_exp
  | Var of string
  | VerticalLine of real
exception BadProgram of string
exception Impossible of string
val epsilon = 1E~05 : real
val real_close = fn : real * real -> bool
val real_close_point = fn : real * real -> real * real -> bool
val two_points_to_line = fn : real * real * real * real -> geom_exp
val intersect = fn : geom_exp * geom_exp -> geom_exp
val eval_prog = fn : geom_exp * (string * geom_exp) list -> geom_exp
val preprocess_prog = fn : geom_exp -> geom_exp
val it = () : unit
val real_equal = fn : real * real -> bool
preprocess leaves LineSegment as is
val it = () : unit
preprocess converts a LineSegment to a Point successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
preprocess flips an improper LineSegment successfully
val it = () : unit
pass
val it = () : unit
eval_prog with empty environment worked
val it = () : unit
line shift broke!
val it = () : unit
vertical line shift broke!
val it = () : unit

uncaught exception Bind [nonexhaustive binding failure]
  raised at: hw7testsprovided.sml:105.6-105.79
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.37 Error: illegal token
hw7.sml:203.38 Error: illegal token
hw7.sml:203.39 Error: illegal token
hw7.sml:205.4 Error: syntax error: replacing  BAR with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:42.54
             ../compiler/TopLevel/interact/evalloop.sml:299.20-299.23
- 

Process sml finished
Standard ML of New Jersey v110.80 [built: Fri Aug 19 07:49:58 2016]
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.37 Error: illegal token
hw7.sml:203.38 Error: illegal token
hw7.sml:203.39 Error: illegal token
hw7.sml:205.4 Error: syntax error: replacing  BAR with  EQUALOP

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:42.54
             ../compiler/TopLevel/interact/evalloop.sml:299.20-299.23
- use "hw7testsprovided.sml";
[opening hw7testsprovided.sml]
[opening hw7.sml]
hw7.sml:203.37 Error: illegal token
hw7.sml:203.38 Error: illegal token
hw7.sml:203.39 Error: illegal token

uncaught exception Compile [Compile: "syntax error"]
  raised at: ../compiler/Parse/main/smlfile.sml:15.24-15.46
             ../compiler/TopLevel/interact/evalloop.sml:42.54
             ../compiler/TopLevel/interact/evalloop.sml:299.20-299.23
- 